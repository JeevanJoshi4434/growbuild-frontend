{"version":3,"sources":["components/reactstrap/tooltips/TooltipSourceCode.js","components/reactstrap/tooltips/TooltipControlled.js","components/reactstrap/tooltips/TooltipUncontrolled.js","components/reactstrap/tooltips/TooltipPositions.js","components/reactstrap/tooltips/Tooltips.js"],"names":["tooltipControlled","React","createElement","className","tooltipUncontrolled","tooltipPosition","TooltipControlled","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","activeTab","tooltipOpen","toggleTab","tab","setState","toggleTooltip","_createClass","key","value","_this2","Fragment","Card","CardHeader","CardTitle","Nav","tabs","NavItem","NavLink","classnames","active","this","onClick","Eye","size","Code","CardBody","TabContent","TabPane","tabId","Button","Ripple","color","id","Tooltip","placement","isOpen","target","toggle","Component","TooltipUncontrolled","UncontrolledTooltip","TooltipPosition","outline","Tooltips","Prism","highlightAll","BreadCrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","xl","lg","sm","TooltipPositions"],"mappings":"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","file":"static/js/144.e8615b87.chunk.js","sourcesContent":["import React from \"react\"\n// eslint-disable-next-line\nimport prism from \"prismjs\"\n\nexport const tooltipControlled = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button, Tooltip} from \"reactstrap\"\n\nclass TooltipControlled extends React.Component {\n\n  state = {\n    tooltipOpen: false\n  }\n\n  toggleTooltip = () => {\n    this.setState({\n      tooltipOpen: !this.state.tooltipOpen\n    })\n  }\n\n  render() {\n    return(\n      <Button color=\"primary\" id=\"ControlledExample\">\n      Controlled\n      </Button>\n      <Tooltip\n        placement=\"top\"\n        isOpen={this.state.tooltipOpen}\n        target=\"ControlledExample\"\n        toggle={this.toggleTooltip}\n      >\n        Hello World !\n      </Tooltip>\n    )\n  }\n}\nexport default TooltipControlled\n`}\n    </code>\n  </pre>\n)\n\nexport const tooltipUncontrolled = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button, UncontrolledTooltip} from \"reactstrap\"\n\nclass TooltipUncontrolled extends React.Component {\n\n\n  render() {\n    return(\n      <Button color=\"primary\" id=\"UncontrolledExample\">\n      Controlled\n      </Button>\n      <UncontrolledTooltip\n        placement=\"top\"\n        target=\"UncontrolledExample\"\n      >\n        Hello World !\n      </UncontrolledTooltip>\n    )\n  }\n}\nexport default TooltipUncontrolled\n`}\n    </code>\n  </pre>\n)\n\nexport const tooltipPosition = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button, UncontrolledTooltip} from \"reactstrap\"\n\nclass TooltipPosition extends React.Component {\n\n\n  render() {\n    return(\n    <Button\n      color=\"primary\"\n      className=\"mr-1 mb-1\"\n      outline\n      id=\"positionTop\"\n    >\n      Top\n    </Button>\n    <UncontrolledTooltip placement=\"top\" target=\"positionTop\">\n      Tooltip on Top\n    </UncontrolledTooltip>\n\n    <Button\n      color=\"primary\"\n      className=\"mr-1 mb-1\"\n      outline\n      id=\"positionRight\"\n    >\n      Right\n    </Button>\n    <UncontrolledTooltip placement=\"right\" target=\"positionRight\">\n      Tooltip on Right\n    </UncontrolledTooltip>\n\n    <Button\n      color=\"primary\"\n      className=\"mr-1 mb-1\"\n      outline\n      id=\"positionBottom\"\n    >\n      Bottom\n    </Button>\n    <UncontrolledTooltip placement=\"bottom\" target=\"positionBottom\">\n      Tooltip on Bottom\n    </UncontrolledTooltip>\n\n    <Button\n      color=\"primary\"\n      className=\"mb-1\"\n      outline\n      id=\"positionLeft\"\n    >\n      Left\n    </Button>\n    <UncontrolledTooltip placement=\"left\" target=\"positionLeft\">\n      Tooltip on Left\n    </UncontrolledTooltip>\n    )\n  }\n}\nexport default TooltipPosition\n`}\n    </code>\n  </pre>\n)\n","import React from \"react\"\nimport {\n  Button,\n  Tooltip,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { tooltipControlled } from \"./TooltipSourceCode\"\n\nclass TooltipControlled extends React.Component {\n  state = {\n    activeTab: \"1\",\n    tooltipOpen: false\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleTooltip = () => {\n    this.setState({\n      tooltipOpen: !this.state.tooltipOpen\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Controlled Tooltip</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              For controlled tooltips you'll have to manage state of\n              component.controlled tooltips require <code>isOpen</code> and{\" \"}\n              <code>toggle</code> props to work.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Button.Ripple color=\"primary\" id=\"ControlledExample\">\n                  Controlled\n                </Button.Ripple>\n                <Tooltip\n                  placement=\"top\"\n                  isOpen={this.state.tooltipOpen}\n                  target=\"ControlledExample\"\n                  toggle={this.toggleTooltip}\n                >\n                  Hello World !\n                </Tooltip>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {tooltipControlled}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default TooltipControlled\n","import React from \"react\"\nimport {\n  Button,\n  UncontrolledTooltip,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { tooltipUncontrolled } from \"./TooltipSourceCode\"\n\nclass TooltipUncontrolled extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Uncontrolled Tooltip</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              UncontrolledTooltip does not require\n              <code>isOpen</code> nor <code>toggle</code> props to work.All you\n              have to do is provide a valid target to tooltip.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Button color=\"primary\" id=\"UnControlledExample\">\n                  Uncontrolled\n                </Button>\n                <UncontrolledTooltip\n                  placement=\"top\"\n                  target=\"UnControlledExample\"\n                >\n                  Hello World !\n                </UncontrolledTooltip>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {tooltipUncontrolled}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default TooltipUncontrolled\n","import React from \"react\"\nimport {\n  Button,\n  UncontrolledTooltip,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { tooltipPosition } from \"./TooltipSourceCode\"\n\nclass TooltipPosition extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Tooltip Positions</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use attribute <code>placement</code> to change position of\n              tooltip.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"primary\" outline id=\"positionTop\">\n                    Top\n                  </Button.Ripple>\n                  <UncontrolledTooltip placement=\"top\" target=\"positionTop\">\n                    Tooltip on Top\n                  </UncontrolledTooltip>\n                </div>\n\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"primary\" outline id=\"positionRight\">\n                    Right\n                  </Button.Ripple>\n                  <UncontrolledTooltip placement=\"right\" target=\"positionRight\">\n                    Tooltip on Right\n                  </UncontrolledTooltip>\n                </div>\n\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"primary\" outline id=\"positionBottom\">\n                    Bottom\n                  </Button.Ripple>\n                  <UncontrolledTooltip\n                    placement=\"bottom\"\n                    target=\"positionBottom\"\n                  >\n                    Tooltip on Bottom\n                  </UncontrolledTooltip>\n                </div>\n\n                <div className=\"d-inline-block mb-1\">\n                  <Button.Ripple\n                    color=\"primary\"\n                    className=\"mb-1\"\n                    outline\n                    id=\"positionLeft\"\n                  >\n                    Left\n                  </Button.Ripple>\n                  <UncontrolledTooltip placement=\"left\" target=\"positionLeft\">\n                    Tooltip on Left\n                  </UncontrolledTooltip>\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {tooltipPosition}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default TooltipPosition\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\nimport TooltipControlled from \"./TooltipControlled\"\nimport TooltipUncontrolled from \"./TooltipUncontrolled\"\nimport TooltipPositions from \"./TooltipPositions\"\nimport Prism from \"prismjs\"\nimport \"prismjs/components/prism-jsx.min\"\nclass Tooltips extends React.Component {\n  componentDidMount() {\n    Prism.highlightAll()\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <BreadCrumbs\n          breadCrumbTitle=\"Tooltips\"\n          breadCrumbParent=\"Components\"\n          breadCrumbActive=\"Tooltips\"\n        />\n        <Row>\n          <Col xl=\"6\" lg=\"12\">\n            <TooltipControlled />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <TooltipUncontrolled />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm=\"12\">\n            <TooltipPositions />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\nexport default Tooltips\n"],"sourceRoot":""}