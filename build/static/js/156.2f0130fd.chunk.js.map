{"version":3,"sources":["views/pages/Deemand/CreateStage.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","CreateStage","_useState","useState","_useState2","_slicedToArray","isEdit","setIsEdit","_useState3","_useState4","AllStage","setAllStage","_useState5","Project","Building","stage_name","amount","extra_facilities","_useState6","Demand","setDemand","_useState7","_useState8","allBuilding","setAllBuilding","_useState9","_useState10","setBuilding","handleInputs","e","target","_objectSpread","_defineProperty","_useState11","_useState12","AllProjects","setAllProjects","getProject","_ref","_asyncToGenerator","_callee","res","_context","axios","get","process","Headers","data","apply","arguments","history","useHistory","useEffect","getBuildings","_ref2","_callee2","id","_context2","concat","console","log","_x","getBuildingDetail","_ref3","_callee3","_context3","_x2","createDemand","_ref4","_callee4","_context4","post","status","window","alert","location","reload","edit","_ref5","_callee5","_context5","_id","building","_x3","deleteFlat","_ref6","_callee6","willDelete","_context6","swal","title","text","icon","dangerMode","delete","getAllStage","_x4","updateFlat","_ref7","_callee7","_context7","put","setTimeout","go","_x5","_ref8","_callee8","_context8","React","createElement","Fragment","className","novalidate","onChange","map","Name","buildingName","htmlFor","required","class","onClick","j","Edit","color","size","Trash"],"mappings":"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","file":"static/js/156.2f0130fd.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Edit, Trash } from \"react-feather\";\nimport { useHistory } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nconst CreateStage = () => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [AllStage, setAllStage] = useState(null);\n  const [Demand, setDemand] = useState({\n    Project: null, Building: null, stage_name: null, amount: null, extra_facilities: null\n  })\n  const [allBuilding, setAllBuilding] = useState(null);\n  const [Building, setBuilding] = useState(null);\n  let name, value;\n  const handleInputs = (e) => {\n    name = e.target.name;\n    value = e.target.value;\n    setDemand({ ...Demand, [name]: value });\n  }\n  const [AllProjects, setAllProjects] = useState(null);\n  const getProject = async () => {\n    const res = await axios.get(process.env.REACT_APP_PORT + '/api/all/project', {\n      Headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    setAllProjects(res.data);\n  }\n  var history = useHistory();\n  useEffect(() => {\n    getProject();\n  }, []);\n  const getBuildings = async (id) => {\n    if ((id?.length === 24 || id?.length === 12) && id !== \"Select Project\") {\n      const res = await axios.get(`${process.env.REACT_APP_PORT}/api/buildings/${id}`, {\n        Headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n      );\n      setAllBuilding(res.data);\n      console.log(res.data);\n    }\n  }\n  const getBuildingDetail = async (id) => {\n    if ((id?.length === 24 || id?.length === 12)) {\n      const res = await axios.get(`${process.env.REACT_APP_PORT}/api/building/${id}`, {\n        Headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n      );\n      setBuilding(res.data);\n      console.log(res.data);\n    }\n  }\n\n  const createDemand = async()=>{\n    const res = await axios.post(process.env.REACT_APP_PORT + '/api/create/demand',{\n      Project: Demand.Project,\n      Building: Demand.Building,\n      stage_name: Demand.stage_name,\n      amount: Demand.amount,\n      extra_facilities: Demand.extra_facilities\n    })\n    if(res.status === 200){\n      window.alert('Stage Created!');\n      window.location.reload();\n    }else{\n      window.alert('Something went wrong!');\n    }\n  }\n  const edit = async(data)=>{\n    setDemand({...Demand, Project: data?.Project, Building: data?.Building, stage_name: data?.stage_name, amount: data?.amount, extra_facilities: data?.extra_facilities,id:data?._id});\n    setIsEdit(true)\n    await getBuildings(data?.Project);\n    setDemand({...Demand,building:data?.building});\n    await getBuildingDetail(data?.building);\n    setDemand({...Demand, Project: data?.Project, Building: data?.Building, stage_name: data?.stage_name, amount: data?.amount, extra_facilities: data?.extra_facilities,id:data?._id});\n   }\n   const deleteFlat= async(id)=>{\n   const willDelete = await swal({\n     title: \"Are you sure?\",\n       text: \"Are you sure that you want to delete this Block?\",\n       icon: \"warning\",\n       dangerMode: true,\n     });\n      \n     if (willDelete) {\n       const res = await axios.delete(process.env.REACT_APP_PORT + '/api/delete/flat/'+id,{\n         Headers: {\n           'Content-Type': 'application/json'\n         }\n       })\n       getAllStage();\n     }\n     willDelete();\n   }\n   const updateFlat = async(id)=>{\n     const res = await axios.put(process.env.REACT_APP_PORT + '/api/update/demand/'+id,{\n      Project: Demand.Project,\n      Building: Demand.Building,\n      stage_name: Demand.stage_name,\n      amount: Demand.amount,\n      extra_facilities: Demand.extra_facilities\n     })\n     if(res.status===200){\n       swal('Stage Updated successfully!','success')\n       setTimeout(() => {\n         history.go(0);\n       }, 2000);\n     }\n   }\n  const getAllStage = async()=>{\n      const res = await axios.get(`${process.env.REACT_APP_PORT}/api/get/all/demand`,{\n        Headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      setAllStage(res.data);\n  }\n  useEffect(() => {\n    getAllStage();\n  }, [])\n  \n  return (\n    <>\n      <div className=\"container bg-white p-2 rounded-2\">\n        <form\n          className=\"row px-4 py-4 mx-2 my-2 shadow-lg needs-validation\"\n          novalidate\n        >\n          <h3 className=\"text-alternate text-primary\">Create New Stage</h3>\n          <hr />\n          <div className=\"col-md-6 col-12 mb-2\">\n            <p className=\"text-alternate\">Select Project</p>\n            <div className=\"input-group\">\n            <select className=\"form-control\" id=\"project\" onChange={(e) => { handleInputs(e); getBuildings(e.target.value); }} name=\"Project\" value={Demand.Project}>\n                {AllProjects === null ?\n                  <option value={null} name={null}>Loading...</option>\n                  : <option value={null} name={null}>Select Project</option>}\n                {AllProjects !== null && AllProjects?.length === 0 &&\n                  <option value={null} name={null}>No projects Avaliable</option>\n                }\n                {AllProjects !== null && AllProjects?.length > 0 && AllProjects.map((i) => {\n                  return (\n                    <option name={i?._id} value={i?._id}>{i?.Name}</option>\n                  )\n                })\n                }\n              </select>\n            </div>\n          </div>\n          <div className=\"col-md-6 col-12 mb-2\">\n            <p className=\"text-alternate\">Select Building</p>\n            <div className=\"input-group\">\n            <select className=\"form-control\" id=\"building\" name=\"Building\" onChange={(e)=>{handleInputs(e);getBuildingDetail(e.target.value)}} value={Demand.Building} >\n                {Demand.Project === null ? <option value={null} name={null} >First select Project</option>\n                  : <>\n                    {allBuilding === null && <option value={null} name={null} >Loading...</option>}\n                    {allBuilding !== null && allBuilding?.length === 0 && <option value={null} name={null} >No Building Avaliable</option>}\n                  </>\n                }\n                {allBuilding?.length > 0 &&\n                  <>\n                    <option value={null} name={null} >Select Building</option>\n                    {\n                      allBuilding?.map((i) => {\n                        return (\n                          <>\n                            <option value={i?._id} name={i?._id}>{i?.buildingName}</option>\n                          </>\n                        )\n                      })\n                    }\n\n                  </>\n                }\n              </select>\n            </div>\n          </div>\n\n          <div className=\"col-md-6 col-12 mb-2\">\n            <label htmlFor=\"stageName\" className=\"text-alternate mb-2\">\n              {\" \"}\n              Stage Name\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"stageName\"\n              name=\"stage_name\"\n              onChange={handleInputs}\n              value={Demand.stage_name}\n              required=\"\"\n            />\n          </div>\n          <div className=\"col-md-6 col-12 mb-2\">\n            <label htmlFor=\"ammount\" className=\"text-alternate mb-2\">\n              {\" \"}\n              Ammount\n            </label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"ammount\"\n              name=\"amount\"\n              onChange={handleInputs}\n              value={Demand.amount}\n              required=\"\"\n            />\n          </div>\n          <div className=\"col-md-12 col-12 mb-2\">\n            <p className=\"text-alternate\">Extra Facilities</p>\n            <div className=\"input-group\">\n              <textarea\n                type=\"text\"\n                className=\"form-control\"\n                id=\"facilities\"\n                name=\"extra_facilities\"\n                onChange={handleInputs}\n                value={Demand.extra_facilities}\n                required=\"\"\n              ></textarea>\n            </div>\n          </div>\n\n          <div className=\"col-md-12 col-12 text-right\">\n          {isEdit ? (\n              <>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-warning btn-md mb-1 mr-1\"\n                  onClick={() => {\n                    setDemand({\n                      ...Demand,\n                      Project: null, Building: null, stage_name: null, amount: null, extra_facilities: null,id:null\n                    });\n                    setIsEdit(false);\n                  }}\n                >\n                  {\" \"}\n                  Exit{\" \"}\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-primary btn-md mb-1 mr-1\"\n                  onClick={() => updateFlat(Demand.id)}\n                >\n                  {\" \"}\n                  Update{\" \"}\n                </button>\n              </>\n            ) : (\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-md mb-1 mr-1\"\n                onClick={() => createDemand()}\n              >\n                {\" \"}\n                Create{\" \"}\n              </button>\n            )}\n           </div>\n        </form>\n        {!isEdit &&\n          <form\n            className=\"row px-4 py-4 mx-2 my-2 shadow-lg needs-validation\"\n            novalidate\n          >\n            <h3 className=\"text-alternate text-primary\">All Flats</h3>\n            <div className=\"d-flex justify-content-center\">\n              <table className=\"table table-striped table-responsive\">\n                <tr>\n                  <th>Sno.</th>\n                  <th>Stage Name</th>\n                  <th>Amount</th>\n                  <th>Action</th>\n                </tr>\n                {AllStage?.map((i, j) => {\n                  let id = i?._id;\n                  return (\n                    <tr>\n                      <td>{j + 1}</td>\n                      <td>{i?.stage_name}</td>\n                      <td>{i?.amount}</td>\n                      <td>\n                        <Edit className=\"cursor-pointer\" color=\"green\" size={30} onClick={() => { edit(i) }} />\n                        <Trash\n                          className=\"cursor-pointer\"\n                          color=\"red\"\n                          size={30}\n                          onClick={() => {\n                            deleteFlat(id);\n                          }}\n                        />\n                      </td>\n                    </tr>\n                  );\n                })}\n              </table>\n            </div>\n          </form>\n        }\n      </div>\n    </>\n  );\n};\n\nexport default CreateStage;\n"],"sourceRoot":""}